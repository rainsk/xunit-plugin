<?xml version="1.0" encoding="UTF-8"?>
<testsuite tests="69" errors="2" failures="3" name="Crete Unit Test" skipped="0">
    <testcase name="VFSSnapshotTest" time="0.010">
        <system-out><![CDATA[
[Info] - check l_obj passed
 == [File] - vfstest.cpp
 == [Line] - 76

[Info] - check l_snapshot passed
 == [File] - vfstest.cpp
 == [Line] - 78

[Info] - check !children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 80

[Info] - check !children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 82

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_obj->property(keys->current()) == l_snapshot->property("origin."
                + keys->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 86

[Info] - check l_origin_obj passed
 == [File] - vfstest.cpp
 == [Line] - 91

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check l_snapshot->property(keys->current()) == l_origin_obj->property(keys->current())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 94

[Info] - check !children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 99

[Info] - check !children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 101
]]></system-out>
    </testcase>
    <testcase name="VFSTest" time="0.000">
        <system-out><![CDATA[
[Info] - check !l_vfs->parent() passed
 == [File] - vfstest.cpp
 == [Line] - 106
]]></system-out>
    </testcase>
    <testcase name="ObjectTest" time="0.000">
        <system-out><![CDATA[
[Info] - check l_obj passed
 == [File] - vfstest.cpp
 == [Line] - 25

[Info] - check *(l_obj.get()) == *(l_obj2.get()) passed
 == [File] - vfstest.cpp
 == [Line] - 29

[Info] - check *(l_obj.get()) != *(l_obj3.get()) passed
 == [File] - vfstest.cpp
 == [Line] - 30

[Info] - check l_obj passed
 == [File] - vfstest.cpp
 == [Line] - 39

[Info] - check !l_obj passed
 == [File] - vfstest.cpp
 == [Line] - 49

[Info] - check !getpwuid_r(getuid(), &l_passwd, l_buffer, 1024, &l_ppasswd)
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 54

[Info] - check l_obj passed
 == [File] - vfstest.cpp
 == [Line] - 56

[Info] - check !l_children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 58

[Info] - check !l_obj->create(std::map<std::string, Tethys::VFS::Variant>(),
                false, 0) passed
            
 == [File] - vfstest.cpp
 == [Line] - 59

[Info] - check !l_obj->find("") passed
 == [File] - vfstest.cpp
 == [Line] - 60

[Info] - check boost::get<std::string>(l_obj->property("type"))
                == "file" passed
            
 == [File] - vfstest.cpp
 == [Line] - 61

[Info] - check boost::get<int>(l_obj->property("filesystem.uid"))
                == static_cast<int>(l_passwd.pw_uid) passed
            
 == [File] - vfstest.cpp
 == [Line] - 63

[Info] - check boost::get<int>(l_obj->property("filesystem.gid"))
                == static_cast<int>(l_passwd.pw_gid) passed
            
 == [File] - vfstest.cpp
 == [Line] - 65

[Info] - check boost::get<std::string>(l_obj->property("filesystem.user"))
                == l_passwd.pw_name passed
            
 == [File] - vfstest.cpp
 == [Line] - 67
]]></system-out>
    </testcase>
    <testcase name="VFSTestChecksum" time="0.000">
        <system-out><![CDATA[
[Info] - check "9fce82c34887c1953b40b3a2883e18850c4fa8a6" ==
                formatted_checksum passed
            
 == [File] - vfstest.cpp
 == [Line] - 243
]]></system-out>
    </testcase>
    <testcase name="DirTest" time="0.030">
        <system-out><![CDATA[
[Info] - check dir_obj passed
 == [File] - vfstest.cpp
 == [Line] - 142

[Info] - check !dir_obj->create(std::map<std::string, Tethys::VFS::Variant>(),
                false, 0) passed
            
 == [File] - vfstest.cpp
 == [Line] - 145

[Info] - check !dir_obj->find("") passed
 == [File] - vfstest.cpp
 == [Line] - 146

[Info] - check !vfs.parent() passed
 == [File] - vfstest.cpp
 == [Line] - 148

[Info] - check !vfs.create(std::map<std::string, Tethys::VFS::Variant>(),
                false, 0) passed
            
 == [File] - vfstest.cpp
 == [Line] - 149

[Info] - check count == 2 passed
 == [File] - vfstest.cpp
 == [Line] - 156

[Info] - check "linux" == boost::get<std::string>(vfs.property("name"))
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 157

[Info] - check "vfs" == boost::get<std::string>(vfs.property("type"))
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 158

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check Com(vfs_children->current(), obj_children->current()) passed
            
 == [File] - vfstest.cpp
 == [Line] - 162

[Info] - check !vfs_children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 166

[Info] - check !obj_children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 167

[Info] - check !refs->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 170

[Info] - check !refs->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 172

[Info] - check !vfs.open() passed
 == [File] - vfstest.cpp
 == [Line] - 176

[Info] - check !dir_obj->open() passed
 == [File] - vfstest.cpp
 == [Line] - 177

[Info] - check !mkdir("/tmp/TESTDIRAAAAA", 0766) passed
 == [File] - vfstest.cpp
 == [Line] - 179

[Info] - check !mkdir("/tmp/TESTDIRAAAAA/TESTDIRB", 0666) passed
 == [File] - vfstest.cpp
 == [Line] - 180

[Info] - check test_dir_a passed
 == [File] - vfstest.cpp
 == [Line] - 182

[Info] - check obj_children->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 184

[Info] - check !test_dir_a passed
 == [File] - vfstest.cpp
 == [Line] - 189

[Info] - check !test_dir_b passed
 == [File] - vfstest.cpp
 == [Line] - 191

[Info] - check !symlink("/", "/tmp/TESTFORLINK") passed
            
 == [File] - vfstest.cpp
 == [Line] - 197

[Info] - check !lstat64("/tmp/TESTFORLINK", &obj_stat) passed
            
 == [File] - vfstest.cpp
 == [Line] - 198

[Info] - check link_obj passed
 == [File] - vfstest.cpp
 == [Line] - 200

[Info] - check "link" == boost::get<std::string>(link_obj->property("type"))
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 201

[Info] - check link_refs->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 203

[Info] - check Com(link_refs->current(), vfs.find("/")) passed
            
 == [File] - vfstest.cpp
 == [Line] - 204

[Info] - check !symlink(tmp.GetPath(), "/tmp/TESTFORLINK") passed
            
 == [File] - vfstest.cpp
 == [Line] - 208

[Info] - check !lstat64("/tmp/TESTFORLINK", &obj_stat) passed
            
 == [File] - vfstest.cpp
 == [Line] - 209

[Info] - check link_obj passed
 == [File] - vfstest.cpp
 == [Line] - 211

[Info] - check Com(VFS::Linux::resolvePath("/tmp"), link_obj->parent())
                passed
            
 == [File] - vfstest.cpp
 == [Line] - 212

[Info] - check link_refs->is_open() passed
 == [File] - vfstest.cpp
 == [Line] - 214

[Info] - check Com(link_refs->current(), vfs.find(tmp.GetPath())) passed
            
 == [File] - vfstest.cpp
 == [Line] - 215
]]></system-out>
    </testcase>
    <testcase name="TempFileTestCreateAndRemove" time="0.000">
        <system-out><![CDATA[
[Info] - check stat(tmp_path.c_str(), &tmp_stat) == 0 passed
 == [File] - utilitiestest.cpp
 == [Line] - 19

[Info] - check ((((tmp_stat.st_mode)) & 0170000) == (0100000)) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 20

[Info] - check stat(tmp_path.c_str(), &tmp_stat) == -1 passed
 == [File] - utilitiestest.cpp
 == [Line] - 22
]]></system-out>
    </testcase>
    <testcase name="TempFileTestCreateSpecialFile" time="0.000">
        <system-out><![CDATA[
[Info] - check stat(tmp.GetPath(), &tmp_stat) == 0 passed
 == [File] - utilitiestest.cpp
 == [Line] - 28

[Info] - check ((((tmp_stat.st_mode)) & 0170000) == (0100000)) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 29

[Info] - check std::string("/tmp/test.doc") ==
                std::string(tmp.GetPath()) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 30
]]></system-out>
    </testcase>
    <testcase name="TempFileTestNoCleanUp" time="0.000">
        <system-out><![CDATA[
[Info] - check stat(tmp_path.c_str(), &tmp_stat) == 0 passed
 == [File] - utilitiestest.cpp
 == [Line] - 39

[Info] - check ((((tmp_stat.st_mode)) & 0170000) == (0100000)) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 40

[Info] - check stat(tmp_path.c_str(), &tmp_stat) == 0 passed
 == [File] - utilitiestest.cpp
 == [Line] - 42

[Info] - check ((((tmp_stat.st_mode)) & 0170000) == (0100000)) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 43

[Info] - check ::unlink("/tmp/test_no_clean_up") == 0 passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 45
]]></system-out>
    </testcase>
    <testcase name="GetSda1PartitionUUID" time="0.000">
        <system-out><![CDATA[
[Info] - check dest_str1 == TestGetSda1PartitionUUID(out_str1) passed
 == [File] - utilitiestest.cpp
 == [Line] - 89

[Info] - check dest_str2 == TestGetSda1PartitionUUID(out_str2) passed
 == [File] - utilitiestest.cpp
 == [Line] - 93

[Info] - check dest_str3 == TestGetSda1PartitionUUID(out_str3) passed
            
 == [File] - utilitiestest.cpp
 == [Line] - 106
]]></system-out>
    </testcase>
    <testcase name="CreateDirectoryTest" time="0.000">
        <system-out><![CDATA[
[Info] - check fs::exists("/tmp/hello/world/test/") passed
            
 == [File] - tritonoperationtest.cpp
 == [Line] - 99

[Info] - check fs::remove_all("/tmp/hello/") > 0 passed
            
 == [File] - tritonoperationtest.cpp
 == [Line] - 100

[Info] - check fs::exists("/tmp/already/exists/") passed
            
 == [File] - tritonoperationtest.cpp
 == [Line] - 104

[Info] - check fs::exists("/tmp/already/exists/") passed
            
 == [File] - tritonoperationtest.cpp
 == [Line] - 106

[Info] - check fs::remove_all("/tmp/already/") > 0
                passed
            
 == [File] - tritonoperationtest.cpp
 == [Line] - 107
]]></system-out>
    </testcase>
    <testcase name="TritonOperationTest" time="0.000">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - tritonoperationtest.cpp
 == [Line] - 46

[Message] - Test case TritonOperationTest did not run
                any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="TritonOperationTest2" time="0.000">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - tritonoperationtest.cpp
 == [Line] - 46

[Message] - Test case TritonOperationTest2 did not
                run any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="TritonOperationTest3" time="0.010">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - tritonoperationtest.cpp
 == [Line] - 46

[Message] - Test case TritonOperationTest3 did not
                run any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="TritonOperationQueueOrderTest" time="0.000">
        <system-out><![CDATA[
[Info] - check !queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 33

[Info] - check op2 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 52

[Info] - check op3 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 53

[Info] - check op4 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 54

[Info] - check op6 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 55

[Info] - check op5 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 56

[Info] - check op1 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 57

[Info] - check op7 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 58

[Info] - check op8 == queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 59

[Info] - check !queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 61

[Info] - check !queue.Poll() passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 62
]]></system-out>
    </testcase>
    <testcase name="TritonOperationQueueTestSingleThread" time="0.000">
        <system-out><![CDATA[
[Info] - check queue.Poll() == __null passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 71

[Info] - check queue.Poll() == op1 passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 75

[Info] - check queue.Poll() == op2 passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 77

[Info] - check queue.Poll() == op3 passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 78

[Info] - check queue.Poll() == __null passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 79

[Info] - check queue.Poll() == __null passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 80
]]></system-out>
    </testcase>
    <testcase name="TritonOperationQueueTestMultipleThreads" time="0.010">
        <system-out><![CDATA[
[Info] - check queue.Poll() == __null passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 104

[Info] - check queue.Poll() == __null passed
 == [File] - tritonoperationqueuetest.cpp
 == [Line] - 105
]]></system-out>
    </testcase>
    <testcase name="ThreadTestJoin" time="0.010">
        <system-out><![CDATA[
[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check 0 == thread.GetCounter() passed
 == [File] - threadtest.cpp
 == [Line] - 78
]]></system-out>
    </testcase>
    <testcase name="ThreadTestPause" time="0.000">
        <system-out><![CDATA[
[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check 0 == thread.GetCounter() passed
 == [File] - threadtest.cpp
 == [Line] - 92
]]></system-out>
    </testcase>
    <testcase name="ThreadTestRestart" time="0.000">
        <system-out><![CDATA[
[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check 0 == thread.GetCounter() passed
 == [File] - threadtest.cpp
 == [Line] - 99

[Info] - check 3 == thread.GetCounter() passed
 == [File] - threadtest.cpp
 == [Line] - 101

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check 0 == thread.GetCounter() passed
 == [File] - threadtest.cpp
 == [Line] - 105
]]></system-out>
    </testcase>
    <testcase name="ThreadTestInterrupt" time="0.010">
        <system-out><![CDATA[
[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check initialized_ passed
 == [File] - threadtest.cpp
 == [Line] - 23

[Info] - check thread.GetCounter() > 0 passed
 == [File] - threadtest.cpp
 == [Line] - 113
]]></system-out>
    </testcase>
    <testcase name="ThreadTestInitFailed" time="0.000">
        <system-out><![CDATA[
[Message] - Test case ThreadTestInitFailed did not
                run any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ThreadTestInterruptionNotIgnored" time="0.000">
        <system-out><![CDATA[
[Message] - Test case
                ThreadTestInterruptionNotIgnored did not run any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ThreadTestNotStarted" time="0.000">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[exception crete::ApplicationException is caught]]>&apos;<![CDATA[
                passed
            
 == [File] - threadtest.cpp
 == [Line] - 145

[Info] - check ]]>&apos;<![CDATA[exception crete::ApplicationException is caught]]>&apos;<![CDATA[
                passed
            
 == [File] - threadtest.cpp
 == [Line] - 146
]]></system-out>
    </testcase>
    <testcase name="ThreadPoolTestNoJob" time="0.000">
        <system-out><![CDATA[
[Message] - Test case ThreadPoolTestNoJob did not run
                any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ThreadPoolTestLargePool" time="0.000">
        <system-out><![CDATA[
[Info] - check job_count == execute_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 71

[Info] - check job_count == dtor_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="ThreadPoolTestSmallPool" time="0.000">
        <system-out><![CDATA[
[Info] - check job_count == execute_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 71

[Info] - check job_count == dtor_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="ThreadPoolTestNormalPool" time="0.000">
        <system-out><![CDATA[
[Info] - check job_count == execute_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 71

[Info] - check job_count == dtor_counter.GetCount() passed
 == [File] - threadpooltest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="ThreadPoolTestDiscardPendingJobs" time="0.000">
        <system-out><![CDATA[
[Info] - check execute_counter.GetCount() < JOB_COUNT passed
 == [File] - threadpooltest.cpp
 == [Line] - 105

[Info] - check dtor_counter.GetCount() == JOB_COUNT passed
 == [File] - threadpooltest.cpp
 == [Line] - 106
]]></system-out>
    </testcase>
    <testcase name="SysConfigTest" time="0.000">
        <system-out><![CDATA[
[Info] - check sysconf->Get("nonexist") == "" passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 13

[Info] - check sysconf->Get("username") == "crete_test0005@tester.org"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 14

[Info] - check sysconf->Get("password") == "password"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 15

[Info] - check sysconf->Get("license") == "2VZQXT2WWV9TWDE67TTG"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 16

[Info] - check sysconf->Get("bushost") == "https://192.168.89.194"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 17

[Info] - check sysconf->Get("tritonhost") == "https://192.168.89.62:9444"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 18

[Info] - check sysconf->Get("empty") == "" passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 19

[Info] - check sysconf->Get("SetV") == "" passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 20

[Info] - check sysconf->Get("SetV") == "123321"
                passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 22

[Info] - check sysconf->Get("SetV") == "000" passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 24

[Info] - check sysconf->Get("SetV") == "" passed
            
 == [File] - sysconfigtest.cpp
 == [Line] - 26
]]></system-out>
    </testcase>
    <testcase name="SQLiteWrapperTest" time="0.000">
        <system-out><![CDATA[
[Info] - check conn.ExecuteUpdate( "insert into testwrapper("
                "col1, col2, col3) values(1.21, ]]>&apos;<![CDATA[abc]]>&apos;<![CDATA[, ]]>&apos;<![CDATA[abc]]>&apos;<![CDATA[)" ) == 1 passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 21

[Info] - check rs passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 23

[Info] - check rs->Next() passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 24

[Info] - check rs->GetDouble(1) == 1.21 passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 25

[Info] - check rs->GetString(2) == "abc" passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 26

[Info] - check rs->GetInt(0) == rs->GetInt("id") passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 27

[Info] - check rs->GetDouble(1) == rs->GetDouble("col1")
                passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 28

[Info] - check rs->GetString(2) == rs->GetString("col2")
                passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 29

[Info] - check pst->ExecuteUpdate() == 1 passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 37

[Info] - check conn.ExecuteUpdate("delete from testwrapper where
                col1=23.12") == 1 passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 39

[Info] - check ]]>&apos;<![CDATA[exception SQLiteException is caught]]>&apos;<![CDATA[ passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 40

[Info] - check ]]>&apos;<![CDATA[no exceptions thrown by conn.RollbackNoThrow()]]>&apos;<![CDATA[
                passed
            
 == [File] - sqlitewrappertest.cpp
 == [Line] - 41

[Info] - check rs passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 48

[Info] - check rs->Next() passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 49

[Info] - check !rs->Next() passed
 == [File] - sqlitewrappertest.cpp
 == [Line] - 50
]]></system-out>
    </testcase>
    <testcase name="SnapshotThreadTest" time="0.010">
        <system-out><![CDATA[
[Message] - Test case SnapshotThreadTest did not run
                any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="SnapshotThreadTestInaccessibleDirectory" time="0.010">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[exception crete::IllegalOperationException is
                caught]]>&apos;<![CDATA[ passed
            
 == [File] - snapshotthreadtest.cpp
 == [Line] - 39
]]></system-out>
    </testcase>
    <testcase name="SnapshotTestZeroSize" time="0.000">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 126

[Info] - check !lhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 48

[Info] - check !rhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 51

[Info] - check ]]>&apos;<![CDATA[/tmp/crete_unittest_dDqEzY vs
                /tmp/snapshot_crete_unittest_dDqEzY_7E1849]]>&apos;<![CDATA[ passed
            
 == [File] - snapshottest.cpp
 == [Line] - 134

[Info] - check tmp_object passed
 == [File] - snapshottest.cpp
 == [Line] - 137

[Info] - check boost::get<std::string>(lhs->property("name"))
                == boost::get<std::string>(rhs->GetProperty("origin.name")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 35

[Info] - check boost::get<std::string>(lhs->property("abspath"))
                == boost::get<std::string>(rhs->GetProperty("origin.abspath")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 37

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.creation_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.creation_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 40

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.modification_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.modification_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 43

[Warning] - triton.host not defined
 == [File] - snapshottest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="SnapshotTestSmallSize" time="0.000">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 126

[Info] - check !lhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 48

[Info] - check !rhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 51

[Info] - check ]]>&apos;<![CDATA[/tmp/crete_unittest_B1LXEj vs
                /tmp/snapshot_crete_unittest_B1LXEj_nVC76s]]>&apos;<![CDATA[ passed
            
 == [File] - snapshottest.cpp
 == [Line] - 134

[Info] - check tmp_object passed
 == [File] - snapshottest.cpp
 == [Line] - 137

[Info] - check boost::get<std::string>(lhs->property("name"))
                == boost::get<std::string>(rhs->GetProperty("origin.name")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 35

[Info] - check boost::get<std::string>(lhs->property("abspath"))
                == boost::get<std::string>(rhs->GetProperty("origin.abspath")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 37

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.creation_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.creation_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 40

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.modification_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.modification_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 43

[Warning] - triton.host not defined
 == [File] - snapshottest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="SnapshotTestMediumSize" time="0.070">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 126

[Info] - check !lhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 48

[Info] - check !rhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 51

[Info] - check ]]>&apos;<![CDATA[/tmp/crete_unittest_ZXqiyC vs
                /tmp/snapshot_crete_unittest_ZXqiyC_twFbWP]]>&apos;<![CDATA[ passed
            
 == [File] - snapshottest.cpp
 == [Line] - 134

[Info] - check tmp_object passed
 == [File] - snapshottest.cpp
 == [Line] - 137

[Info] - check boost::get<std::string>(lhs->property("name"))
                == boost::get<std::string>(rhs->GetProperty("origin.name")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 35

[Info] - check boost::get<std::string>(lhs->property("abspath"))
                == boost::get<std::string>(rhs->GetProperty("origin.abspath")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 37

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.creation_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.creation_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 40

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.modification_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.modification_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 43

[Warning] - triton.host not defined
 == [File] - snapshottest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="SnapshotTestLargeSize" time="0.960">
        <failure><![CDATA[
[Error] - check crete::FileStates::GetInstance()->GetPatchTimeAndHash(
                snapshot->GetManifestFilename(), hash, patchtime) failed
            
 == [File] - snapshottest.cpp
 == [Line] - 146

[Error] - check crete::RDIFF::Read( snapshot->GetManifestFilename(),
                &header, hashes) failed
            
 == [File] - snapshottest.cpp
 == [Line] - 150

[Error] - check crete::FileStates::GetInstance()->RemoveFile( snapshot->GetManifestFilename())
                failed
            
 == [File] - snapshottest.cpp
 == [Line] - 152
]]></failure>
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 126

[Info] - check !lhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 48

[Info] - check !rhs_fs.bad() passed
 == [File] - snapshottest.cpp
 == [Line] - 51

[Info] - check ]]>&apos;<![CDATA[/tmp/crete_unittest_PeVPb6 vs
                /tmp/snapshot_crete_unittest_PeVPb6_PD02MF]]>&apos;<![CDATA[ passed
            
 == [File] - snapshottest.cpp
 == [Line] - 134

[Info] - check tmp_object passed
 == [File] - snapshottest.cpp
 == [Line] - 137

[Info] - check boost::get<std::string>(lhs->property("name"))
                == boost::get<std::string>(rhs->GetProperty("origin.name")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 35

[Info] - check boost::get<std::string>(lhs->property("abspath"))
                == boost::get<std::string>(rhs->GetProperty("origin.abspath")) passed
            
 == [File] - snapshottest.cpp
 == [Line] - 37

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.creation_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.creation_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 40

[Info] - check boost::get<boost::posix_time::ptime>(lhs->property("filesystem.modification_time"))
                == boost::get<boost::posix_time::ptime>(rhs->GetProperty("origin.filesystem.modification_time"))
                passed
            
 == [File] - snapshottest.cpp
 == [Line] - 43

[Warning] - triton.host not defined
 == [File] - snapshottest.cpp
 == [Line] - 72
]]></system-out>
    </testcase>
    <testcase name="SnapshotPatchTest" time="0.000">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - snapshottest.cpp
 == [Line] - 173

[Message] - Test case SnapshotPatchTest did not run
                any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ScanThreadTestScan" time="0.090">
        <system-out><![CDATA[
[Info] - check task_queue.GetBackupTaskCount() > 0 passed
 == [File] - scanthreadtest.cpp
 == [Line] - 49
]]></system-out>
    </testcase>
    <testcase name="RestoreStoreTest" time="0.010">
        <system-out><![CDATA[
[Info] - check handle > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 29

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 31

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 31

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 31

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 31

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 31

[Info] - check store.CommitJob(-1) == -1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 33

[Info] - check store.AddRestoreFile(-1, "aaa", 11, "aa")
                == 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 35

[Info] - check id > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 37

[Info] - check store.CommitJob(id) == -1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 38

[Info] - check rt passed
 == [File] - restorestoretest.cpp
 == [Line] - 40

[Info] - check rt->GetID() == id passed
 == [File] - restorestoretest.cpp
 == [Line] - 41

[Info] - check rt->GetName() == "Test1" passed
 == [File] - restorestoretest.cpp
 == [Line] - 42

[Info] - check tasks.size() == RIC passed
 == [File] - restorestoretest.cpp
 == [Line] - 45

[Info] - check (*it)->GetID() > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 48

[Info] - check (*it)->GetSrcPath() == src_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 49

[Info] - check (*it)->GetDesPath() == des_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 50

[Info] - check (*it)->GetBackupTime() == backup_times[index] passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 51

[Info] - check (*it)->GetID() > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 48

[Info] - check (*it)->GetSrcPath() == src_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 49

[Info] - check (*it)->GetDesPath() == des_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 50

[Info] - check (*it)->GetBackupTime() == backup_times[index] passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 51

[Info] - check (*it)->GetID() > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 48

[Info] - check (*it)->GetSrcPath() == src_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 49

[Info] - check (*it)->GetDesPath() == des_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 50

[Info] - check (*it)->GetBackupTime() == backup_times[index] passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 51

[Info] - check (*it)->GetID() > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 48

[Info] - check (*it)->GetSrcPath() == src_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 49

[Info] - check (*it)->GetDesPath() == des_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 50

[Info] - check (*it)->GetBackupTime() == backup_times[index] passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 51

[Info] - check (*it)->GetID() > 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 48

[Info] - check (*it)->GetSrcPath() == src_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 49

[Info] - check (*it)->GetDesPath() == des_pathes[index] passed
 == [File] - restorestoretest.cpp
 == [Line] - 50

[Info] - check (*it)->GetBackupTime() == backup_times[index] passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 51

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 56

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 56

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 56

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 56

[Info] - check store.AddRestoreFile(handle, src_pathes[i],
                backup_times[i], des_pathes[i]) > 0 passed
            
 == [File] - restorestoretest.cpp
 == [Line] - 56

[Info] - check rt->GetID() == id passed
 == [File] - restorestoretest.cpp
 == [Line] - 60

[Info] - check rt->GetName() == "Test2" passed
 == [File] - restorestoretest.cpp
 == [Line] - 61

[Info] - check jobs.size() == 2 passed
 == [File] - restorestoretest.cpp
 == [Line] - 66

[Info] - check jobs.size() == 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 69

[Info] - check jobs.size() == 2 passed
 == [File] - restorestoretest.cpp
 == [Line] - 71

[Info] - check tasks.size() == RIC passed
 == [File] - restorestoretest.cpp
 == [Line] - 74

[Info] - check tasks.size() == RIC << 1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 79

[Info] - check tasks.size() == 9 passed
 == [File] - restorestoretest.cpp
 == [Line] - 82

[Info] - check tasks.size() == 1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 85

[Info] - check tasks.size() == RIC - 1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 90

[Info] - check jobs.size() == 1 passed
 == [File] - restorestoretest.cpp
 == [Line] - 94

[Info] - check store.DeleteJob(-1) == 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 95

[Info] - check store.DeleteTask(-1) == 0 passed
 == [File] - restorestoretest.cpp
 == [Line] - 96
]]></system-out>
    </testcase>
    <testcase name="RdiffTest" time="0.020">
        <system-out><![CDATA[
[Info] - check !RDIFF::WantRdiffStream("test.doc", 1024ll * 100, &blocksize)
                passed
            
 == [File] - rdifftest.cpp
 == [Line] - 26

[Info] - check blocksize == 65536 passed
 == [File] - rdifftest.cpp
 == [Line] - 27

[Info] - check RDIFF::WantRdiffStream("test.ppt", 1024ll * 500, &blocksize)
                passed
            
 == [File] - rdifftest.cpp
 == [Line] - 28

[Info] - check blocksize == 65536 passed
 == [File] - rdifftest.cpp
 == [Line] - 29

[Info] - check !RDIFF::WantRdiffStream("test.mp3", 1024ll * 1000,
                &blocksize) passed
            
 == [File] - rdifftest.cpp
 == [Line] - 30

[Info] - check blocksize == 1048576 passed
 == [File] - rdifftest.cpp
 == [Line] - 31

[Info] - check RDIFF::WantRdiffStream("test.mp3", 1024ll * 5000, &blocksize)
                passed
            
 == [File] - rdifftest.cpp
 == [Line] - 32

[Info] - check blocksize == 1048576 passed
 == [File] - rdifftest.cpp
 == [Line] - 33

[Info] - check !RDIFF::Read("rdifftest.0", &header, hashes1)
                passed
            
 == [File] - rdifftest.cpp
 == [Line] - 39

[Info] - check RDIFF::Commit("rdifftest.1.doc", &rdiffcontext,
                "01234567890123456789", 12345678ll) passed
            
 == [File] - rdifftest.cpp
 == [Line] - 59

[Info] - check RDIFF::Commit("rdifftest.2.mp3", &rdiffcontext,
                "98765432109876543210", 87654321ll) passed
            
 == [File] - rdifftest.cpp
 == [Line] - 79

[Info] - check RDIFF::Read("rdifftest.1.doc", &headerOut,
                hashesOut) passed
            
 == [File] - rdifftest.cpp
 == [Line] - 84

[Info] - check hashesOut->buffer() == origin1->buffer() passed
 == [File] - rdifftest.cpp
 == [Line] - 86

[Info] - check headerOut.blocksize == 65536 passed
 == [File] - rdifftest.cpp
 == [Line] - 87

[Info] - check headerOut.backuptime == 12345678ll passed
 == [File] - rdifftest.cpp
 == [Line] - 88

[Info] - check headerOut.mtime == 12345678ll passed
 == [File] - rdifftest.cpp
 == [Line] - 89

[Info] - check headerOut.filesize == 1048576ll passed
 == [File] - rdifftest.cpp
 == [Line] - 90

[Info] - check headerOut.patchsize == 65536ll * 8 passed
 == [File] - rdifftest.cpp
 == [Line] - 91

[Info] - check filehash == "01234567890123456789" passed
 == [File] - rdifftest.cpp
 == [Line] - 93

[Info] - check patchtime == (time_t)12345678ll passed
 == [File] - rdifftest.cpp
 == [Line] - 94

[Info] - check RDIFF::Read("rdifftest.2.mp3", &headerOut,
                hashesOut) passed
            
 == [File] - rdifftest.cpp
 == [Line] - 96

[Info] - check hashesOut->buffer() == origin2->buffer() passed
 == [File] - rdifftest.cpp
 == [Line] - 98

[Info] - check headerOut.blocksize == 1048576 passed
 == [File] - rdifftest.cpp
 == [Line] - 99

[Info] - check headerOut.backuptime == 87654321ll passed
 == [File] - rdifftest.cpp
 == [Line] - 100

[Info] - check headerOut.mtime == 87654321ll passed
 == [File] - rdifftest.cpp
 == [Line] - 101

[Info] - check headerOut.filesize == 1048576ll * 6 passed
 == [File] - rdifftest.cpp
 == [Line] - 102

[Info] - check headerOut.patchsize == 1048576ll * 3 passed
 == [File] - rdifftest.cpp
 == [Line] - 103

[Info] - check filehash == "98765432109876543210" passed
 == [File] - rdifftest.cpp
 == [Line] - 105

[Info] - check patchtime == (time_t)87654321ll passed
 == [File] - rdifftest.cpp
 == [Line] - 106
]]></system-out>
    </testcase>
    <testcase name="RdiffStreamZeroTest" time="0.000">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - rdiffstreamtest.cpp
 == [Line] - 41

[Info] - check rdiffhash->size() == originHashes->size() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 66
]]></system-out>
    </testcase>
    <testcase name="RdiffStreamSmallTest" time="0.000">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - rdiffstreamtest.cpp
 == [Line] - 41

[Info] - check rdiffhash->size() == originHashes->size() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 66

[Info] - check rdiffhash->buffer() == originHashes->buffer() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 68
]]></system-out>
    </testcase>
    <testcase name="RdiffStreamMediumTest" time="0.000">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - rdiffstreamtest.cpp
 == [Line] - 41

[Info] - check rdiffhash->size() == originHashes->size() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 66

[Info] - check rdiffhash->buffer() == originHashes->buffer() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 68
]]></system-out>
    </testcase>
    <testcase name="RdiffStreamLargeTest" time="0.010">
        <system-out><![CDATA[
[Info] - check !fs.bad() passed
 == [File] - rdiffstreamtest.cpp
 == [Line] - 41

[Info] - check rdiffhash->size() == originHashes->size() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 66

[Info] - check rdiffhash->buffer() == originHashes->buffer() passed
            
 == [File] - rdiffstreamtest.cpp
 == [Line] - 68
]]></system-out>
    </testcase>
    <testcase name="EventConversionTest" time="0.000">
        <system-out><![CDATA[
[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68

[Info] - check event_list[i] == VFS::Linux::watcherEvent2InotifyEvent(
                VFS::Linux::inotifyEvent2WatcherEvent(event_list[i]) ) passed
            
 == [File] - mordorthreadtest.cpp
 == [Line] - 68
]]></system-out>
    </testcase>
    <testcase name="MordorThreadTest" time="0.000">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - mordorthreadtest.cpp
 == [Line] - 83

[Message] - Test case MordorThreadTest did not run
                any assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ManifestTest" time="0.000">
        <system-out><![CDATA[
[Warning] - triton.host not defined
 == [File] - manifesttest.cpp
 == [Line] - 49

[Message] - Test case ManifestTest did not run any
                assertions
            
 == [File] - ./boost/test/impl/results_collector.ipp
 == [Line] - 220
]]></system-out>
    </testcase>
    <testcase name="ManifestStoreTest" time="0.020">
        <system-out><![CDATA[
[Info] - check stream passed
 == [File] - manifeststoretest.cpp
 == [Line] - 13

[Info] - check !parser->error() passed
 == [File] - manifeststoretest.cpp
 == [Line] - 22

[Info] - check parser->final() passed
 == [File] - manifeststoretest.cpp
 == [Line] - 23

[Info] - check id > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 34

[Info] - check id > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 34

[Info] - check id > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 34

[Info] - check entries.size() == 3 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 38

[Info] - check store.DeleteEntry( "C:\\Documents and
                Settings\\tester\\My Documents\\pic.bmp.bmp") > 0 passed
            
 == [File] - manifeststoretest.cpp
 == [Line] - 41

[Info] - check entries.size() == 2 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 44

[Info] - check me passed
 == [File] - manifeststoretest.cpp
 == [Line] - 46

[Info] - check patches.size() == 8 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 49

[Info] - check me passed
 == [File] - manifeststoretest.cpp
 == [Line] - 51

[Info] - check me->GetPath() == "/home/ron/hello-world.mp3"
                passed
            
 == [File] - manifeststoretest.cpp
 == [Line] - 52

[Info] - check me->GetID() > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 53

[Info] - check patches.size() > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 56

[Info] - check pi->GetBackupTime() == 1260428212 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 58

[Info] - check pi->GetModifiedTime() == 1091613600 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 59

[Info] - check pi->GetCreationTime() == 1237774581 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 60

[Info] - check pi->GetFileSize() == 760752 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 61

[Info] - check pi->IsBaseline() == true passed
 == [File] - manifeststoretest.cpp
 == [Line] - 62

[Info] - check pi->GetPatchHash() == "86826218e270d4ae6123852c5d3826abb65ebfa8"
                passed
            
 == [File] - manifeststoretest.cpp
 == [Line] - 63

[Info] - check pi->GetPatchSize() == 760752 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 64

[Info] - check pi->GetAttributes() == 40 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 65

[Info] - check stream passed
 == [File] - manifeststoretest.cpp
 == [Line] - 13

[Info] - check !parser->error() passed
 == [File] - manifeststoretest.cpp
 == [Line] - 22

[Info] - check parser->final() passed
 == [File] - manifeststoretest.cpp
 == [Line] - 23

[Info] - check parser->size() > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 70

[Info] - check store.AddPatch(me, pi) > 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 73

[Info] - check patches.size() == 2 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 77

[Info] - check store.AddPatch(me, pi) == 0 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 81

[Info] - check entries.size() == 2 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 86

[Info] - check entries.size() == 2 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 90

[Info] - check entries.size() == 3 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 94

[Info] - check entries.size() == 1 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 99

[Info] - check objs.size() == 1 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 103

[Info] - check objs.front().second == true passed
 == [File] - manifeststoretest.cpp
 == [Line] - 104

[Info] - check objs.size() == 2 passed
 == [File] - manifeststoretest.cpp
 == [Line] - 107

[Info] - check objs.front().second == true passed
 == [File] - manifeststoretest.cpp
 == [Line] - 108

[Info] - check objs.back().second == false passed
 == [File] - manifeststoretest.cpp
 == [Line] - 109
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestPatchInfo" time="0.000">
        <system-out><![CDATA[
[Info] - check info passed
 == [File] - manifestparsertest.cpp
 == [Line] - 43

[Info] - check 1260428222 == info->GetBackupTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 44

[Info] - check 1260414458 == info->GetModifiedTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 45

[Info] - check 1260414458 == info->GetCreationTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 46

[Info] - check 67 == info->GetFileSize() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 47

[Info] - check true == info->IsBaseline() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 48

[Info] - check "45b5c07695b8c8fc7f643da841adb217b6a1284d" ==
                info->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 49

[Info] - check 67 == info->GetPatchSize() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 50

[Info] - check 40 == info->GetAttributes() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 51
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestPatchInfo2" time="0.000">
        <system-out><![CDATA[
[Info] - check info passed
 == [File] - manifestparsertest.cpp
 == [Line] - 58

[Info] - check 1260764691 == info->GetBackupTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 59

[Info] - check 1260764691 == info->GetModifiedTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 60

[Info] - check 1260764691 == info->GetCreationTime() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 61

[Info] - check -1 == info->GetFileSize() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 62

[Info] - check false == info->IsBaseline() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 63

[Info] - check "da39a3ee5e6b4b0d3255bfef95601890afd80709" ==
                info->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 64

[Info] - check 0 == info->GetPatchSize() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 65

[Info] - check 0 == info->GetAttributes() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 66
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestBadPatchInfo" time="0.000">
        <system-out><![CDATA[
[Info] - check !info passed
 == [File] - manifestparsertest.cpp
 == [Line] - 72

[Info] - check !info passed
 == [File] - manifestparsertest.cpp
 == [Line] - 77

[Info] - check !info passed
 == [File] - manifestparsertest.cpp
 == [Line] - 82
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestSmall" time="0.000">
        <system-out><![CDATA[
[Info] - check stream passed
 == [File] - manifestparsertest.cpp
 == [Line] - 15

[Info] - check !parser->error() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 24

[Info] - check parser->final() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 25

[Info] - check 3 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 88

[Info] - check it != parser->end() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 90

[Info] - check "C:\\Documents and Settings\\tester\\My
                Documents\\pic.bmp.bmp" == (*it)->GetPath() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 92

[Info] - check "748c040b89e1017f392656b96e5bdbbfa0d0154b" ==
                (*it)->GetLastPatchInfo()->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 94

[Info] - check ++it != parser->end() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 96

[Info] - check "/home/ron/hello-world.mp3" == (*it)->GetPath()
                passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 98

[Info] - check "86826218e270d4ae6123852c5d3826abb65ebfa8" ==
                (*it)->GetLastPatchInfo()->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 100

[Info] - check ++it != parser->end() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 102

[Info] - check "conf.dat" == (*it)->GetPath() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 104

[Info] - check "8febf5b3fb05ac88729320e00e9aba1e96e7cb86" ==
                (*it)->GetLastPatchInfo()->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 106
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestUnicode" time="0.000">
        <system-out><![CDATA[
[Info] - check stream passed
 == [File] - manifestparsertest.cpp
 == [Line] - 15

[Info] - check !parser->error() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 24

[Info] - check parser->final() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 25

[Info] - check 2 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 112

[Info] - check it != parser->end() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 114

[Info] - check std::string("C:\\share\\?????\\??.txt") ==
                (*it)->GetPath() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 116

[Info] - check "0eac2882e305fd863fb85eea42fcae20756e76fc" ==
                (*it)->GetLastPatchInfo()->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 118

[Info] - check ++it != parser->end() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 120

[Info] - check "C:\\share\\test.txt" == (*it)->GetPath()
                passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 122

[Info] - check "8328407d17367dffb808e526b9cd6dced7e154f8" ==
                (*it)->GetLastPatchInfo()->GetPatchHash() passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 124
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestLarge" time="0.020">
        <system-out><![CDATA[
[Info] - check stream passed
 == [File] - manifestparsertest.cpp
 == [Line] - 15

[Info] - check !parser->error() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 24

[Info] - check parser->final() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 25

[Info] - check 233 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 130
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestEmpty" time="0.000">
        <system-out><![CDATA[
[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                USER
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 142

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES


                USER
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 142

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[
                FILES

                USER
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 142
]]></system-out>
    </testcase>
    <testcase name="ManifestParserTestUnexpected" time="0.000">
        <system-out><![CDATA[
[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;&apos;<![CDATA[ passed
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[ ]]>&apos;<![CDATA[ passed
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[ ]]>&apos;<![CDATA[ passed
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[

                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[

                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES]]>&apos;<![CDATA[ passed
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                USER]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES


                USER]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                USER
                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                USER

                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES

                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168

[Info] - check strlen(str) == stream->write(str, strlen(str)) passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 32

[Info] - check ]]>&apos;<![CDATA[FILES


                ]]>&apos;<![CDATA[ passed
            
 == [File] - manifestparsertest.cpp
 == [Line] - 167

[Info] - check 0 == parser->size() passed
 == [File] - manifestparsertest.cpp
 == [Line] - 168
]]></system-out>
    </testcase>
    <testcase name="LibraryTestMozyFS" time="0.030">
        <system-out><![CDATA[
[Info] - check root passed
 == [File] - librarytest.cpp
 == [Line] - 48

[Info] - check cur->GetPath() == "/" passed
 == [File] - librarytest.cpp
 == [Line] - 51

[Info] - check root->GetChildren(entries) == 3 passed
 == [File] - librarytest.cpp
 == [Line] - 55

[Info] - check entries.size() == 3 passed
 == [File] - librarytest.cpp
 == [Line] - 56

[Info] - check cur->IsDir() == true passed
 == [File] - librarytest.cpp
 == [Line] - 58

[Info] - check cur->GetPath() == "/home/" passed
 == [File] - librarytest.cpp
 == [Line] - 59

[Info] - check cur->GetChildren(entries) == 21 passed
 == [File] - librarytest.cpp
 == [Line] - 61

[Info] - check entries.size() == 21 passed
 == [File] - librarytest.cpp
 == [Line] - 62

[Info] - check cur->IsDir() == false passed
 == [File] - librarytest.cpp
 == [Line] - 64

[Info] - check cur->GetPath() == "/home/ttt.mp3" passed
 == [File] - librarytest.cpp
 == [Line] - 65

[Info] - check cur->ListPatches(patches) == 0 passed
 == [File] - librarytest.cpp
 == [Line] - 69

[Info] - check patches.size() == 4 passed
 == [File] - librarytest.cpp
 == [Line] - 70

[Info] - check patches.front()->GetBackupTime() == 1263268064 passed
 == [File] - librarytest.cpp
 == [Line] - 71

[Info] - check patches.front()->GetPatchHash() == "e350025c58a6819d8219cd023fc3e7a66e420234"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 72

[Info] - check patches.front()->GetFileSize() == 4 passed
 == [File] - librarytest.cpp
 == [Line] - 73

[Info] - check patches.back()->GetBackupTime() == 1268644584 passed
 == [File] - librarytest.cpp
 == [Line] - 74

[Info] - check patches.back()->GetPatchHash() == "df0723ba94a9781b245eeb51115c42d756d8e078"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 75

[Info] - check patches.back()->GetFileSize() == 8 passed
 == [File] - librarytest.cpp
 == [Line] - 76

[Info] - check files.size() == 5 passed
 == [File] - librarytest.cpp
 == [Line] - 82

[Info] - check files.size() == 71 passed
 == [File] - librarytest.cpp
 == [Line] - 88

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check (*iter)->GetPath().substr(0, 29) == "/share/lanslot/Fireworks/DSC0"
                passed
            
 == [File] - librarytest.cpp
 == [Line] - 92

[Info] - check quota == 87373600 passed
 == [File] - librarytest.cpp
 == [Line] - 95
]]></system-out>
    </testcase>
    <testcase name="LibraryTestDaemon" time="0.010">
        <system-out><![CDATA[
[Info] - check CheckNumJobTask(3, 3) == true passed
 == [File] - librarytest.cpp
 == [Line] - 102

[Info] - check new_job1 passed
 == [File] - librarytest.cpp
 == [Line] - 106

[Info] - check ret == -1 passed
 == [File] - librarytest.cpp
 == [Line] - 108

[Info] - check CheckNumJobTask(3, 3) == true passed
 == [File] - librarytest.cpp
 == [Line] - 110

[Info] - check new_job2 passed
 == [File] - librarytest.cpp
 == [Line] - 115

[Info] - check new_job3 passed
 == [File] - librarytest.cpp
 == [Line] - 116

[Info] - check ret == 0 passed
 == [File] - librarytest.cpp
 == [Line] - 123

[Info] - check ret == 0 passed
 == [File] - librarytest.cpp
 == [Line] - 125

[Info] - check ret == -1 passed
 == [File] - librarytest.cpp
 == [Line] - 128

[Info] - check CheckNumJobTask(5, 8) == true passed
 == [File] - librarytest.cpp
 == [Line] - 129

[Info] - check jobs.size() == 1 passed
 == [File] - librarytest.cpp
 == [Line] - 134

[Info] - check ret == 0 passed
 == [File] - librarytest.cpp
 == [Line] - 136

[Info] - check ret == 0 passed
 == [File] - librarytest.cpp
 == [Line] - 138

[Info] - check CheckNumJobTask(3, 3) == true passed
 == [File] - librarytest.cpp
 == [Line] - 139
]]></system-out>
    </testcase>
    <testcase name="FileStatesTest" time="0.000">
        <system-out><![CDATA[
[Info] - check file_state passed
 == [File] - filestatestest.cpp
 == [Line] - 18

[Info] - check !file_state->GetFileRdiff("/filestatetest.0",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 25

[Info] - check !file_state->GetPatchTimeAndHash("/filestatetest.0",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 26

[Info] - check !file_state->GetFileRdiff("/filestatetest.1",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 27

[Info] - check !file_state->GetPatchTimeAndHash("/filestatetest.1",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 28

[Info] - check file_state->AddOrUpdateFile("/filestatetest.1",
                rdiffIn, "123", patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 33

[Info] - check file_state->AddOrUpdateFile("/filestatetest.2",
                rdiffIn, "456", patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 36

[Info] - check file_state->AddOrUpdateFile("/filestatetest.3",
                rdiffIn, "781239", patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 39

[Info] - check file_state->AddOrUpdateFile("/filestatetest.3",
                rdiffIn, "789", patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 42

[Info] - check file_state->GetFileRdiff("/filestatetest.1",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 48

[Info] - check file_state->GetPatchTimeAndHash("/filestatetest.1",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 49

[Info] - check filehash == "123" passed
 == [File] - filestatestest.cpp
 == [Line] - 50

[Info] - check patchtime == (time_t)11111111 passed
 == [File] - filestatestest.cpp
 == [Line] - 51

[Info] - check rdiffOut->size() == 10 passed
 == [File] - filestatestest.cpp
 == [Line] - 52

[Info] - check rdiffOut->buffer() == origin1->buffer() passed
 == [File] - filestatestest.cpp
 == [Line] - 53

[Info] - check file_state->GetFileRdiff("/filestatetest.2",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 54

[Info] - check file_state->GetPatchTimeAndHash("/filestatetest.2",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 55

[Info] - check filehash == "456" passed
 == [File] - filestatestest.cpp
 == [Line] - 56

[Info] - check patchtime == (time_t)22222222 passed
 == [File] - filestatestest.cpp
 == [Line] - 57

[Info] - check rdiffOut->size() == 20 passed
 == [File] - filestatestest.cpp
 == [Line] - 58

[Info] - check rdiffOut->buffer() == origin2->buffer() passed
 == [File] - filestatestest.cpp
 == [Line] - 59

[Info] - check file_state->GetFileRdiff("/filestatetest.3",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 60

[Info] - check file_state->GetPatchTimeAndHash("/filestatetest.3",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 61

[Info] - check filehash == "789" passed
 == [File] - filestatestest.cpp
 == [Line] - 62

[Info] - check patchtime == (time_t)33333333 passed
 == [File] - filestatestest.cpp
 == [Line] - 63

[Info] - check rdiffOut->size() == 30 passed
 == [File] - filestatestest.cpp
 == [Line] - 64

[Info] - check rdiffOut->buffer() == origin3->buffer() passed
 == [File] - filestatestest.cpp
 == [Line] - 65

[Info] - check file_state->AddOrUpdateFile("/filestatetest.3",
                rdiffIn, "999", patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 71

[Info] - check file_state->GetFileRdiff("/filestatetest.3",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 72

[Info] - check file_state->GetPatchTimeAndHash("/filestatetest.3",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 73

[Info] - check filehash == "999" passed
 == [File] - filestatestest.cpp
 == [Line] - 74

[Info] - check patchtime == (time_t)77777777 passed
 == [File] - filestatestest.cpp
 == [Line] - 75

[Info] - check rdiffOut->size() == 20 passed
 == [File] - filestatestest.cpp
 == [Line] - 76

[Info] - check rdiffOut->buffer() == update3->buffer() passed
 == [File] - filestatestest.cpp
 == [Line] - 77

[Info] - check !file_state->RemoveFile("/filestatetest.4")
                passed
            
 == [File] - filestatestest.cpp
 == [Line] - 80

[Info] - check file_state->RemoveFile("/filestatetest.3")
                passed
            
 == [File] - filestatestest.cpp
 == [Line] - 81

[Info] - check file_state->RemoveFile("/filestatetest.2")
                passed
            
 == [File] - filestatestest.cpp
 == [Line] - 82

[Info] - check file_state->RemoveFile("/filestatetest.1")
                passed
            
 == [File] - filestatestest.cpp
 == [Line] - 83

[Info] - check !file_state->GetFileRdiff("/filestatetest.1",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 85

[Info] - check !file_state->GetPatchTimeAndHash("/filestatetest.1",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 86

[Info] - check !file_state->GetFileRdiff("/filestatetest.2",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 87

[Info] - check !file_state->GetPatchTimeAndHash("/filestatetest.2",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 88

[Info] - check !file_state->GetFileRdiff("/filestatetest.3",
                rdiffOut) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 89

[Info] - check !file_state->GetPatchTimeAndHash("/filestatetest.3",
                filehash, patchtime) passed
            
 == [File] - filestatestest.cpp
 == [Line] - 90
]]></system-out>
    </testcase>
    <testcase name="ExceptionTestCatchByCreteException" time="0.000">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[exceptiontest.cpp(11): Throw in function void<unnamed>::DummyFunction()
                Dynamic exception type: N5boost16exception_detail10clone_implIN5crete20ApplicationExceptionEEE
                std::exception::what: whatever error message
                [PN6Mordor13tag_backtraceE] = /var/lib/hudson/workspace/crete/crete/test/test [0x8363445]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN34ExceptionTestCatchByCreteException11test_methodEv+0x4d)
                [0x836525d]
                /var/lib/hudson/workspace/crete/crete/test/test [0x836650e]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail7invokerINS1_6unusedEE6invokeIPFvvEEES3_RT_+0x37)
                [0x82face3]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail16callback0_impl_tINS1_6unusedEPFvvEE6invokeEv+0x4d)
                [0x82fad61]
                /usr/lib/libboost_unit_test_framework.so.1.40.0 [0xb77309dd]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor13catch_signalsERKNS_9unit_test9callback0IiEE+0xe5)
                [0xb7715765]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor7executeERKNS_9unit_test9callback0IiEE+0x35)
                [0xb7715835]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test19unit_test_monitor_t21execute_and_translateERKNS0_9test_caseE+0xb8)
                [0xb7730b08]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14framework_impl5visitERKNS0_9test_caseE+0xb8)
                [0xb7721708]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_9test_caseERNS0_17test_tree_visitorE+0x26)
                [0xb7751986]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x40)
                [0xb7752030]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_10test_suiteERNS0_17test_tree_visitorE+0x71)
                [0xb7751e51]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x6c)
                [0xb775205c]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test9framework3runEmb+0x55d) [0xb771f79d]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc+0x13e)
                [0xb772d9fe]
                /var/lib/hudson/workspace/crete/crete/test/test(main+0x54) [0x83a6ade]
                /lib/libc.so.6(__libc_start_main+0xe5) [0xb711d455]
                /var/lib/hudson/workspace/crete/crete/test/test [0x82ec021]
                ]]>&apos;<![CDATA[ passed
            
 == [File] - exceptiontest.cpp
 == [Line] - 22

[Info] - check ]]>&apos;<![CDATA[exceptiontest.cpp(11): Throw in function void<unnamed>::DummyFunction()
                Dynamic exception type: N5boost16exception_detail10clone_implIN5crete20ApplicationExceptionEEE
                std::exception::what: whatever error message
                [PN6Mordor13tag_backtraceE] = /var/lib/hudson/workspace/crete/crete/test/test [0x8363445]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN34ExceptionTestCatchByCreteException11test_methodEv+0x4d)
                [0x836525d]
                /var/lib/hudson/workspace/crete/crete/test/test [0x836650e]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail7invokerINS1_6unusedEE6invokeIPFvvEEES3_RT_+0x37)
                [0x82face3]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail16callback0_impl_tINS1_6unusedEPFvvEE6invokeEv+0x4d)
                [0x82fad61]
                /usr/lib/libboost_unit_test_framework.so.1.40.0 [0xb77309dd]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor13catch_signalsERKNS_9unit_test9callback0IiEE+0xe5)
                [0xb7715765]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor7executeERKNS_9unit_test9callback0IiEE+0x35)
                [0xb7715835]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test19unit_test_monitor_t21execute_and_translateERKNS0_9test_caseE+0xb8)
                [0xb7730b08]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14framework_impl5visitERKNS0_9test_caseE+0xb8)
                [0xb7721708]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_9test_caseERNS0_17test_tree_visitorE+0x26)
                [0xb7751986]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x40)
                [0xb7752030]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_10test_suiteERNS0_17test_tree_visitorE+0x71)
                [0xb7751e51]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x6c)
                [0xb775205c]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test9framework3runEmb+0x55d) [0xb771f79d]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc+0x13e)
                [0xb772d9fe]
                /var/lib/hudson/workspace/crete/crete/test/test(main+0x54) [0x83a6ade]
                /lib/libc.so.6(__libc_start_main+0xe5) [0xb711d455]
                /var/lib/hudson/workspace/crete/crete/test/test [0x82ec021]
                ]]>&apos;<![CDATA[ passed
            
 == [File] - exceptiontest.cpp
 == [Line] - 23
]]></system-out>
    </testcase>
    <testcase name="ExceptionTestCatchByStdException" time="0.010">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[exceptiontest.cpp(11): Throw in function void<unnamed>::DummyFunction()
                Dynamic exception type: N5boost16exception_detail10clone_implIN5crete20ApplicationExceptionEEE
                std::exception::what: whatever error message
                [PN6Mordor13tag_backtraceE] = /var/lib/hudson/workspace/crete/crete/test/test [0x8363445]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN32ExceptionTestCatchByStdException11test_methodEv+0x4d)
                [0x8363f33]
                /var/lib/hudson/workspace/crete/crete/test/test [0x83651e4]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail7invokerINS1_6unusedEE6invokeIPFvvEEES3_RT_+0x37)
                [0x82face3]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail16callback0_impl_tINS1_6unusedEPFvvEE6invokeEv+0x4d)
                [0x82fad61]
                /usr/lib/libboost_unit_test_framework.so.1.40.0 [0xb77309dd]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor13catch_signalsERKNS_9unit_test9callback0IiEE+0xe5)
                [0xb7715765]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor7executeERKNS_9unit_test9callback0IiEE+0x35)
                [0xb7715835]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test19unit_test_monitor_t21execute_and_translateERKNS0_9test_caseE+0xb8)
                [0xb7730b08]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14framework_impl5visitERKNS0_9test_caseE+0xb8)
                [0xb7721708]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_9test_caseERNS0_17test_tree_visitorE+0x26)
                [0xb7751986]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x40)
                [0xb7752030]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_10test_suiteERNS0_17test_tree_visitorE+0x71)
                [0xb7751e51]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x6c)
                [0xb775205c]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test9framework3runEmb+0x55d) [0xb771f79d]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc+0x13e)
                [0xb772d9fe]
                /var/lib/hudson/workspace/crete/crete/test/test(main+0x54) [0x83a6ade]
                /lib/libc.so.6(__libc_start_main+0xe5) [0xb711d455]
                /var/lib/hudson/workspace/crete/crete/test/test [0x82ec021]
                ]]>&apos;<![CDATA[ passed
            
 == [File] - exceptiontest.cpp
 == [Line] - 37

[Info] - check ]]>&apos;<![CDATA[exceptiontest.cpp(11): Throw in function void<unnamed>::DummyFunction()
                Dynamic exception type: N5boost16exception_detail10clone_implIN5crete20ApplicationExceptionEEE
                std::exception::what: whatever error message
                [PN6Mordor13tag_backtraceE] = /var/lib/hudson/workspace/crete/crete/test/test [0x8363445]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN32ExceptionTestCatchByStdException11test_methodEv+0x4d)
                [0x8363f33]
                /var/lib/hudson/workspace/crete/crete/test/test [0x83651e4]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail7invokerINS1_6unusedEE6invokeIPFvvEEES3_RT_+0x37)
                [0x82face3]
                /var/lib/hudson/workspace/crete/crete/test/test(_ZN5boost9unit_test9ut_detail16callback0_impl_tINS1_6unusedEPFvvEE6invokeEv+0x4d)
                [0x82fad61]
                /usr/lib/libboost_unit_test_framework.so.1.40.0 [0xb77309dd]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor13catch_signalsERKNS_9unit_test9callback0IiEE+0xe5)
                [0xb7715765]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost17execution_monitor7executeERKNS_9unit_test9callback0IiEE+0x35)
                [0xb7715835]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test19unit_test_monitor_t21execute_and_translateERKNS0_9test_caseE+0xb8)
                [0xb7730b08]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14framework_impl5visitERKNS0_9test_caseE+0xb8)
                [0xb7721708]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_9test_caseERNS0_17test_tree_visitorE+0x26)
                [0xb7751986]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x40)
                [0xb7752030]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeERKNS0_10test_suiteERNS0_17test_tree_visitorE+0x71)
                [0xb7751e51]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test18traverse_test_treeEmRNS0_17test_tree_visitorE+0x6c)
                [0xb775205c]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test9framework3runEmb+0x55d) [0xb771f79d]
                /usr/lib/libboost_unit_test_framework.so.1.40.0(_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc+0x13e)
                [0xb772d9fe]
                /var/lib/hudson/workspace/crete/crete/test/test(main+0x54) [0x83a6ade]
                /lib/libc.so.6(__libc_start_main+0xe5) [0xb711d455]
                /var/lib/hudson/workspace/crete/crete/test/test [0x82ec021]
                ]]>&apos;<![CDATA[ passed
            
 == [File] - exceptiontest.cpp
 == [Line] - 38
]]></system-out>
    </testcase>
    <testcase name="ConfigurationLoadTest" time="0.000">
        <system-out><![CDATA[
[Info] - check conf->schedule_sets_.size() == 3 passed
 == [File] - configuretest.cpp
 == [Line] - 26

[Info] - check its->start_ == 0 passed
 == [File] - configuretest.cpp
 == [Line] - 28

[Info] - check its->end_ == 86400 passed
 == [File] - configuretest.cpp
 == [Line] - 29

[Info] - check its->throttle_ == -1 passed
 == [File] - configuretest.cpp
 == [Line] - 30

[Info] - check its->start_ == 86400 passed
 == [File] - configuretest.cpp
 == [Line] - 32

[Info] - check its->end_ == 172800 passed
 == [File] - configuretest.cpp
 == [Line] - 33

[Info] - check its->throttle_ == 0 passed
 == [File] - configuretest.cpp
 == [Line] - 34

[Info] - check its->start_ == 172800 passed
 == [File] - configuretest.cpp
 == [Line] - 36

[Info] - check its->end_ == 604800 passed
 == [File] - configuretest.cpp
 == [Line] - 37

[Info] - check its->throttle_ == 64000 passed
 == [File] - configuretest.cpp
 == [Line] - 38

[Info] - check conf->backup_sets_.size() == 2 passed
 == [File] - configuretest.cpp
 == [Line] - 40

[Info] - check it->name_ == "Music" passed
 == [File] - configuretest.cpp
 == [Line] - 42

[Info] - check it->include_scopes_.size() == 3 passed
 == [File] - configuretest.cpp
 == [Line] - 43

[Info] - check *it2++ == "/home/" passed
 == [File] - configuretest.cpp
 == [Line] - 45

[Info] - check *it2++ == "/share/" passed
 == [File] - configuretest.cpp
 == [Line] - 46

[Info] - check *it2++ == "/tmp/" passed
 == [File] - configuretest.cpp
 == [Line] - 47

[Info] - check it->exclude_scopes_.size() == 0 passed
 == [File] - configuretest.cpp
 == [Line] - 48

[Info] - check it->rules_.size() == 2 passed
 == [File] - configuretest.cpp
 == [Line] - 49

[Info] - check it3->size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 51

[Info] - check it4->include_ == true passed
 == [File] - configuretest.cpp
 == [Line] - 53

[Info] - check it4->type_ == BackupSetRule::TYPE_EXTENSION passed
 == [File] - configuretest.cpp
 == [Line] - 54

[Info] - check it4->operation_ == BackupSetRule::OPERATION_EQUAL passed
            
 == [File] - configuretest.cpp
 == [Line] - 55

[Info] - check it4->extensions_.size() == 4 passed
 == [File] - configuretest.cpp
 == [Line] - 56

[Info] - check *it5++ == "mp3" passed
 == [File] - configuretest.cpp
 == [Line] - 58

[Info] - check *it5++ == "wma" passed
 == [File] - configuretest.cpp
 == [Line] - 59

[Info] - check *it5++ == "aac" passed
 == [File] - configuretest.cpp
 == [Line] - 60

[Info] - check *it5++ == "m4a" passed
 == [File] - configuretest.cpp
 == [Line] - 61

[Info] - check it3->size() == 2 passed
 == [File] - configuretest.cpp
 == [Line] - 63

[Info] - check it4->include_ == true passed
 == [File] - configuretest.cpp
 == [Line] - 65

[Info] - check it4->type_ == BackupSetRule::TYPE_EXTENSION passed
 == [File] - configuretest.cpp
 == [Line] - 66

[Info] - check it4->operation_ == BackupSetRule::OPERATION_EQUAL passed
            
 == [File] - configuretest.cpp
 == [Line] - 67

[Info] - check it4->extensions_.size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 68

[Info] - check *it5++ == "wav" passed
 == [File] - configuretest.cpp
 == [Line] - 70

[Info] - check it4->include_ == false passed
 == [File] - configuretest.cpp
 == [Line] - 72

[Info] - check it4->type_ == BackupSetRule::TYPE_EXTENSION passed
 == [File] - configuretest.cpp
 == [Line] - 73

[Info] - check it4->operation_ == BackupSetRule::OPERATION_EQUAL passed
            
 == [File] - configuretest.cpp
 == [Line] - 74

[Info] - check it4->extensions_.size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 75

[Info] - check *it5++ == "ogg" passed
 == [File] - configuretest.cpp
 == [Line] - 77

[Info] - check it->name_ == "Photo" passed
 == [File] - configuretest.cpp
 == [Line] - 79

[Info] - check it->include_scopes_.size() == 3 passed
 == [File] - configuretest.cpp
 == [Line] - 80

[Info] - check *it2++ == "/home/" passed
 == [File] - configuretest.cpp
 == [Line] - 82

[Info] - check *it2++ == "/mnt/" passed
 == [File] - configuretest.cpp
 == [Line] - 83

[Info] - check *it2++ == "/tmp/" passed
 == [File] - configuretest.cpp
 == [Line] - 84

[Info] - check it->exclude_scopes_.size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 85

[Info] - check *it2++ == "/tmp/tmp.jpg" passed
 == [File] - configuretest.cpp
 == [Line] - 87

[Info] - check it->rules_.size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 88

[Info] - check it3->size() == 1 passed
 == [File] - configuretest.cpp
 == [Line] - 90

[Info] - check it4->include_ == true passed
 == [File] - configuretest.cpp
 == [Line] - 92

[Info] - check it4->type_ == BackupSetRule::TYPE_EXTENSION passed
 == [File] - configuretest.cpp
 == [Line] - 93

[Info] - check it4->operation_ == BackupSetRule::OPERATION_EQUAL passed
            
 == [File] - configuretest.cpp
 == [Line] - 94

[Info] - check it4->extensions_.size() == 2 passed
 == [File] - configuretest.cpp
 == [Line] - 95

[Info] - check *it5++ == "jpg" passed
 == [File] - configuretest.cpp
 == [Line] - 97

[Info] - check *it5++ == "arw" passed
 == [File] - configuretest.cpp
 == [Line] - 98
]]></system-out>
    </testcase>
    <testcase name="CheckLicense_0" time="0.010">
        <error><![CDATA[
[Exception] - child has exited; pid: 8389; uid: 101; exit value: 2
                
            
 == [File] - busclienttest.cpp
 == [Line] - 56
]]></error>
        <system-err><![CDATA[
[Exception] - child has exited; pid: 8389; uid: 101; exit value: 2
                
            
 == [File] - busclienttest.cpp
 == [Line] - 56
]]></system-err>
    </testcase>
    <testcase name="CheckLicense_1" time="0.000">
        <error><![CDATA[
[Exception] - signal: SIGABRT (application abort requested)
                
            
 == [File] - busclienttest.cpp
 == [Line] - 56
]]></error>
        <system-err><![CDATA[
[Exception] - signal: SIGABRT (application abort requested)
                
            
 == [File] - busclienttest.cpp
 == [Line] - 56
]]></system-err>
    </testcase>
    <testcase name="BlackListTest" time="0.000">
        <system-out><![CDATA[
[Info] - check bl.IsInBlackList("/tmp/crete_snapshot") == false
                passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 14

[Info] - check bl.IsInBlackList("/tmp/crete_snap") == false passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 16

[Info] - check bl.IsInBlackList("/tmp/crete_snapshot") == true
                passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 17

[Info] - check bl.IsInBlackList("/tmp/crete_snapshot000") == false
                passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 18

[Info] - check bl.IsInBlackList("/tmp/crete_snapshot/") == true
                passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 19

[Info] - check bl.IsInBlackList("/tmp/crete_snapshot/snap/") ==
                true passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 20

[Info] - check bl.IsInBlackList("/tmp/crete_snapshot/snap/tmp.txt")
                == true passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 21

[Info] - check bl.IsInBlackList("/tmp/test.txt") == false passed
            
 == [File] - blacklisttest.cpp
 == [Line] - 22

[Info] - check bl.IsInBlackList("/proc/sys") == true passed
 == [File] - blacklisttest.cpp
 == [Line] - 25

[Info] - check bl.IsInBlackList("/") == false passed
 == [File] - blacklisttest.cpp
 == [Line] - 26

[Info] - check bl.IsInBlackList("") == false passed
 == [File] - blacklisttest.cpp
 == [Line] - 27

[Info] - check bl.IsInBlackList("/proc/sys") == true passed
 == [File] - blacklisttest.cpp
 == [Line] - 30

[Info] - check bl.IsInBlackList("/") == false passed
 == [File] - blacklisttest.cpp
 == [Line] - 31

[Info] - check bl.IsInBlackList("") == false passed
 == [File] - blacklisttest.cpp
 == [Line] - 32

[Info] - check bl.IsInBlackList("/proc/sys") == true passed
 == [File] - blacklisttest.cpp
 == [Line] - 34

[Info] - check bl.IsInBlackList("/") == true passed
 == [File] - blacklisttest.cpp
 == [Line] - 35

[Info] - check bl.IsInBlackList("") == false passed
 == [File] - blacklisttest.cpp
 == [Line] - 36
]]></system-out>
    </testcase>
    <testcase name="BackupTaskStoreTest" time="0.020">
        <system-out><![CDATA[
[Info] - check bts.CountBackupTask() == 0 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 22

[Info] - check bt1 == __null passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 24

[Info] - check bts.CountBackupTask() == 10 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 31

[Info] - check bt2->GetPath() == "test_0" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 33

[Info] - check bt2->GetOperation() == 0 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 34

[Info] - check bts.CountBackupTask() == 16 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 40

[Info] - check ll.size() == 6 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 43

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check it->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 45

[Info] - check ll.begin()->GetOperation() == 5 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 49

[Info] - check bts.UpdateBackupTask(bt4) == 1 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 51

[Info] - check bts.CountBackupTask() == 16 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 52

[Info] - check ll.begin()->GetOperation() == 0 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 55

[Info] - check bts.DelBackupTask("test_5") == 1 passed
            
 == [File] - backuptaskstoretest.cpp
 == [Line] - 57

[Info] - check bts.CountBackupTask() == 15 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 58

[Info] - check bt3->GetPath() == "same" passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 60

[Info] - check bt3->GetOperation() == 10 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 61

[Info] - check bts.CountBackupTask() == 14 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 63

[Info] - check bts.CountBackupTask() == 14 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 65

[Info] - check bts.DelBackupTask("same") == 6 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 66

[Info] - check bts.CountBackupTask() == 8 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 67

[Info] - check bts.CountBackupTask() == 0 passed
 == [File] - backuptaskstoretest.cpp
 == [Line] - 69
]]></system-out>
    </testcase>
    <testcase name="BackupTaskQueueTestNormal" time="0.030">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[/tmp/file1.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check ]]>&apos;<![CDATA[/tmp/file2.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check ]]>&apos;<![CDATA[/tmp/file3.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check all.empty() passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 57
]]></system-out>
    </testcase>
    <testcase name="BackupTaskQueueTestCoalescing" time="0.020">
        <system-out><![CDATA[
[Info] - check ]]>&apos;<![CDATA[/tmp/file1.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check ]]>&apos;<![CDATA[/tmp/file2.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check ]]>&apos;<![CDATA[/tmp/file3.mp3]]>&apos;<![CDATA[ passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 22

[Info] - check all.empty() passed
 == [File] - backuptaskqueuetest.cpp
 == [Line] - 96
]]></system-out>
    </testcase>
    <testcase name="BackupTaskCheckRuleTest" time="0.000">
        <system-out><![CDATA[
[Info] - check conf->Match(obj0) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 89

[Info] - check conf->Match(obj1) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 90

[Info] - check conf->Match(obj2) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 91

[Info] - check conf->Match(obj3) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 92

[Info] - check conf->Match(obj4) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 93

[Info] - check conf->Match(obj5) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 94

[Info] - check conf->Match(obj6) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 95

[Info] - check conf->Match(obj7) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 96

[Info] - check conf->Match(obj8) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 97

[Info] - check conf->Match(obj9) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 98

[Info] - check conf->Match(obj10) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 99

[Info] - check conf->Match(obj11) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 100

[Info] - check conf->Match(obj12) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 102

[Info] - check conf->Match(obj13) == true passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 103

[Info] - check conf->Match(obj14) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 104

[Info] - check conf->Match(obj15) == false passed
 == [File] - backuptaskcheckruletest.cpp
 == [Line] - 105
]]></system-out>
    </testcase>
</testsuite>